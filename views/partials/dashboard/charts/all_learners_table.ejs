<div class="col-md-6 col-xxl-4 d-flex order-2 order-xxl-4"></div>
<div class="card flex-fill w-100">
  <div class="px-4 pt-3">
    <h5 class="card-title mb-0">All learners</h5>
  </div>
  <div class="px-4 pb-4 d-flex">
    <div class="align-self-center w-100">
      <div class="py-3">
        <div class="chart chart-xs">
          <div id="learner-table"></div>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to delete this learner?</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        <button id="deleteButton" type="button" class="btn btn-primary">Delete</button>
      </div>
    </div>
  </div>
</div>
<script>


const learnerTableElement = document.getElementById('learner-table')

const COLUMN_NAMES = ['First Name', 'Last Name', 'Email',"Status","CreatedAt","UpdatedAt"];

const SERVER_URL = 'data';

const getServerUrlWithPagination = (prev, page, limit) => {
  const queryParams = `limit=${limit}&offset=${page * limit}`;
  return prev === SERVER_URL 
    ? `${prev}?${queryParams}` 
    : `${prev}&${queryParams}`;
};

const getServerUrlWithSearch = (prev, keyword) => `${prev}?search=${keyword}`;

const getServerUrlWithSort = (prev, columns) => {
  if (!columns.length) {
    return prev;
  }
  const sign = prev === SERVER_URL ? '?' : '&';
  const col = columns[0];
  const dir = col.direction === 1 ? 'asc' : 'desc';
  const colName = COLUMN_NAMES[col.index];
  return `${prev}${sign}order=${colName}&dir=${dir}`;
};

function DeleteModal(Id) {
  const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
  const deleteButton = document.getElementById('deleteButton');
  deleteButton.addEventListener('click', function () {
    const learnerId = Id;
    const encodedLearnerId = encodeURIComponent(learnerId);
    const url = `/learners/delete/${encodedLearnerId}`;
    
    fetch(url, {
      method: 'GET',
    })
      .then(res => {
        if (res.ok) {
          modal.hide();
          window.location.href = '/dashboard/learners';
        } else {
          console.error('Failed to delete learner');
        }
      })
      .catch(error => {
        console.error('Failed to delete learner:', error);
      });
  });
  
  modal.show();
}
(async () => {
const datatable_learners_grid = new gridjs.Grid({
  columns: [
    ...COLUMN_NAMES,
    {
      name: 'Action',
      formatter: (_, row) => gridjs.html(
        `<button style="padding: 0.2rem .5rem; margin-bottom: 0.5rem; border: none; border-radius: 0.25rem; background-color: #1E40AF; color: white; font-size: 1rem; font-weight: 500;">
            Edit
          </button>
          <button onclick="DeleteModal('${row.cells[2].data}')" style="padding: 0.2rem .5rem; margin-bottom: 0.5rem; border: none; border-radius: 0.25rem; color: #fff; background-color: #f44336;color: white; font-size: 1rem; font-weight: 500">
            Delete
          </button>
          <button style="padding: 0.2rem .5rem; margin-bottom: 0.5rem; border: none; border-radius: 0.25rem; background-color: #1E40AF; color: white; font-size: .8rem; font-weight: 500;">
            Reset Password
          </button>`
      )
    }
  ],
  fixedHeader: true,
  pagination: {
    limit: 3,
    server: {
      url: getServerUrlWithPagination
    }
  },
  search: {
    server: {
      url: getServerUrlWithSearch
    }
  },
  
  server: {
    url: SERVER_URL,
    method: 'POST',
    then: data => data.learners.map(learner => [learner.firstname, learner.lastname, learner.email,"Active", learner.createdAt,learner.updatedAt]),
    total: data => data.count
  }
  
  
  //,sort: true, its make a problem for searching
}).render(learnerTableElement);
 })();

</script>